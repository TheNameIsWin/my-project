name: Auto Sync PR Status with ClickUp

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  push:
    branches:
      - main

jobs:
  clickup_status_sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Ensure jq is installed or updated
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Sync PR with ClickUp
        env:
          CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
          CLICKUP_LIST_ID: ${{ secrets.CLICKUP_LIST_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title || '' }}
          PR_URL: ${{ github.event.pull_request.html_url || '' }}
          PR_STATE: ${{ github.event.pull_request.state || '' }}
          PR_MERGED: ${{ github.event.pull_request.merged || false }}
          ACTOR: ${{ github.actor }}
          EVENT: ${{ github.event_name }}
          PR_NUMBER: ${{ github.event.pull_request.number || 0 }}
        run: |
          echo "⚙️ GitHub Event: $EVENT"
          echo "🔍 PR_TITLE: $PR_TITLE"
          echo "🔍 PR_STATE: $PR_STATE"
          echo "🔍 PR_MERGED: $PR_MERGED"
          echo "🔍 ACTOR: $ACTOR"

          # 🧠 Determine ClickUp status (Match EXACT names in your workspace)
          if [ "$EVENT" == "pull_request" ]; then
            if [ "$PR_MERGED" == "true" ]; then
              STATUS="Completed"  # ✅ When PR merged, mark as Completed
            elif [ "$PR_STATE" == "open" ]; then
              STATUS="In Progress"
            else
              STATUS="To Do"
            fi
          else
            STATUS="In Progress"
          fi

          echo "🌀 ClickUp Status to Apply: $STATUS"

          # 🧩 Fetch all tasks in ClickUp list
          tasks_json=$(curl --silent --request GET \
            --url "https://api.clickup.com/api/v2/list/$CLICKUP_LIST_ID/task?archived=false" \
            --header "Authorization: $CLICKUP_API_TOKEN")

          existing_task=$(echo "$tasks_json" | jq -r ".tasks[] | select(.name==\"PR: $PR_TITLE\") | .id" | head -n1)

          # 🧱 If no task exists, create one
          if [ -z "$existing_task" ]; then
            echo "🆕 No existing task found — creating new one..."
            create_response=$(curl --silent --request POST \
              --url "https://api.clickup.com/api/v2/list/$CLICKUP_LIST_ID/task" \
              --header "Authorization: $CLICKUP_API_TOKEN" \
              --header "Content-Type: application/json" \
              --data "{
                \"name\": \"PR: $PR_TITLE\",
                \"description\": \"🔗 [Pull Request Link]($PR_URL)\\n👤 Created by: $ACTOR\",
                \"status\": \"$STATUS\"
              }")

            # ✅ Extract the new task ID safely
            new_task_id=$(echo "$create_response" | jq -r '.id')

            if [ "$new_task_id" == "null" ] || [ -z "$new_task_id" ]; then
              echo "❌ Failed to create ClickUp task. Response:"
              echo "$create_response"
              exit 1
            fi

            echo "✅ New ClickUp Task Created — ID: $new_task_id"
            TASK_URL="https://app.clickup.com/t/$new_task_id"

            # 💬 Comment back on PR with ClickUp link
            if [ "$PR_NUMBER" -ne 0 ]; then
              curl -s -H "Authorization: token $GITHUB_TOKEN" \
                -X POST \
                -d "{\"body\": \"🆕 **ClickUp Task Created:** [View Task]($TASK_URL)\\n📌 Status: $STATUS\"}" \
                "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
            fi

          else
            # 🛠 Update existing task
            echo "🔁 Existing Task Found (ID: $existing_task) — Updating status..."
            update_response=$(curl --silent --request PUT \
              --url "https://api.clickup.com/api/v2/task/$existing_task" \
              --header "Authorization: $CLICKUP_API_TOKEN" \
              --header "Content-Type: application/json" \
              --data "{
                \"status\": \"$STATUS\"
              }")

            echo "✅ Task Updated to Status: $STATUS"

            # 💬 Comment on PR about status change
            if [ "$PR_NUMBER" -ne 0 ]; then
              curl -s -H "Authorization: token $GITHUB_TOKEN" \
                -X POST \
                -d "{\"body\": \"🔄 **ClickUp Task Updated:** Status changed to *$STATUS*\"}" \
                "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
            fi
          fi

          echo "🎯 ClickUp Sync Completed Successfully!"
